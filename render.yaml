services:
  # Mongo
  - type: web
    name: mongo
    env: docker
    dockerContext: .
    dockerfilePath: ./docker/Dockerfile.mongo
    rootDir: .
    plan: free
    # disk:
    #   name: mongo-data
    #   mountPath: /data/db
    #   sizeGB: 10
    envVars:
      - key: MONGO_PORT
        value: ${MONGO_PORT}
      - key: MONGO_URL
        value: ${MONGO_URL}
    region: oregon

  # ResetService
  - type: web
    name: resetservice
    env: docker
    dockerContext: .
    dockerfilePath: ./services/resetservice/dev.Dockerfile
    rootDir: .
    buildCommand: docker build -t resetservice -f services/resetservice/dev.Dockerfile .
    plan: free
    envVars:
      - key: NODE_OPTIONS
        value: --trace-warnings
      - key: NODE_ENV
        value: ${NODE_ENV}
      - key: PORT
        value: ${RESETSERVICE_PORT}
      - key: LOGGER_LEVEL
        value: ${LOGGER_LEVEL}
      - key: REDIS_URL
        value: ${REDIS_URL}
      - key: REDIS_PASSWORD
        value: ${REDIS_PASSWORD}
      - key: MONGO_URL
        value: ${MONGO_URL}
      - key: RESETSERVICE_DEBUG_PORT
        value: ${RESETSERVICE_DEBUG_PORT}
      - key: PORT
        value: ${RESETSERVICE_PORT}
    region: oregon

  # Gateway
  - type: web
    name: gateway
    env: docker
    dockerContext: .
    dockerfilePath: ./services/gateway/dev.Dockerfile
    rootDir: .
    buildCommand: docker build -t gateway -f services/gateway/dev.Dockerfile .
    plan: free
    envVars:
      - key: NODE_OPTIONS
        value: --trace-warnings
      - key: RESETSERVICE_URL
        value: ${RESETSERVICE_URL}
      - key: PORT
        value: ${GATEWAY_PORT}
      - key: GATEWAY_DEBUG_PORT
        value: ${GATEWAY_DEBUG_PORT}
    region: oregon

  # Authenticator
  - type: web
    name: authenticator
    env: docker
    dockerContext: .
    dockerfilePath: ./services/authenticator/dev.Dockerfile
    rootDir: .
    buildCommand: docker build -t authenticator -f services/authenticator/dev.Dockerfile .
    plan: free
    envVars:
      - key: NODE_OPTIONS
        value: --trace-warnings
      - key: PORT
        value: ${AUTHENTICATOR_PORT}
      - key: AUTHENTICATOR_DEBUG_PORT
        value: ${AUTHENTICATOR_DEBUG_PORT}
    region: oregon

  # PDFGenerator
  - type: web
    name: pdfgenerator
    env: docker
    dockerContext: .
    dockerfilePath: ./services/pdfgenerator/dev.Dockerfile
    rootDir: .
    buildCommand: docker build -t pdfgenerator -f services/pdfgenerator/dev.Dockerfile .
    plan: free
    envVars:
      - key: NODE_OPTIONS
        value: --trace-warnings
      - key: PORT
        value: ${PDFGENERATOR_PORT}
      - key: PDFGENERATOR_DEBUG_PORT
        value: ${PDFGENERATOR_DEBUG_PORT}
    region: oregon

  # Emailer
  - type: web
    name: emailer
    env: docker
    dockerContext: .
    dockerfilePath: ./services/emailer/dev.Dockerfile
    rootDir: .
    buildCommand: docker build -t emailer -f services/emailer/dev.Dockerfile .
    plan: free
    envVars:
      - key: NODE_OPTIONS
        value: --trace-warnings
      - key: PORT
        value: ${EMAILER_PORT}
      - key: EMAILER_DEBUG_PORT
        value: ${EMAILER_DEBUG_PORT}
    region: oregon

  # API
  - type: web
    name: api
    env: docker
    dockerContext: .
    dockerfilePath: ./services/api/dev.Dockerfile
    rootDir: .
    buildCommand: docker build -t api -f services/api/dev.Dockerfile .
    plan: free
    envVars:
      - key: NODE_OPTIONS
        value: --trace-warnings
      - key: PORT
        value: ${API_PORT}
      - key: API_DEBUG_PORT
        value: ${API_DEBUG_PORT}
    region: oregon

  # TenantAPI
  - type: web
    name: tenantapi
    env: docker
    dockerContext: .
    dockerfilePath: ./services/tenantapi/dev.Dockerfile
    rootDir: .
    buildCommand: docker build -t tenantapi -f services/tenantapi/dev.Dockerfile .
    plan: free
    envVars:
      - key: NODE_OPTIONS
        value: --trace-warnings
      - key: PORT
        value: ${TENANTAPI_PORT}
      - key: TENANTAPI_DEBUG_PORT
        value: ${TENANTAPI_DEBUG_PORT}
    region: oregon

  # Landlord Frontend
  - type: web
    name: landlord-frontend
    env: docker
    dockerContext: .
    dockerfilePath: ./webapps/landlord/dev.Dockerfile
    rootDir: .
    buildCommand: docker build -t landlord-frontend -f webapps/landlord/dev.Dockerfile --build-arg BASE_PATH=$LANDLORD_BASE_PATH .
    plan: free
    envVars:
      - key: PORT
        value: ${LANDLORD_FRONTEND_PORT}
    region: oregon

  # Tenant Frontend
  - type: web
    name: tenant-frontend
    env: docker
    dockerContext: .
    dockerfilePath: ./webapps/tenant/dev.Dockerfile
    rootDir: .
    buildCommand: docker build -t tenant-frontend -f webapps/tenant/dev.Dockerfile --build-arg BASE_PATH=$TENANT_BASE_PATH .
    plan: free
    envVars:
      - key: PORT
        value: ${TENANT_FRONTEND_PORT}
    region: oregon
